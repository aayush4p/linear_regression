install.packages('ggplot2movies')
library(ggplot2)
library(ggplot2movies)
head(movies)
source('~/.active-rstudio-document')
print(eg)
source('~/.active-rstudio-document')
print(eg + geom_histogram())
print(eg + geom_histogram(binwidth = 0.2,color='pink'))
print(eg + geom_histogram(binwidth = 0.2,color='pink',fill='orange'))
source('~/.active-rstudio-document')
print(eg2 + geom_point(aes(size=cyl)))
eg3 <- (eg2 + geom_point(aes(size=cyl)))
eg4 <- eg3 + scale_color_gradient(low='blue',high='red')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(ggplot2)
source('~/.active-rstudio-document')
print(pl + geom_bar(aes(fill=drv)))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
df <- read.csv('student-mat.csv')
head(df)
df <- read.csv('student-mat.csv',sep= ';')
head(df)
summary
(df)
any(is.na())
any(is.na(df))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
print(coor.data)
install.packages('corrgram')
install.packages('corrgram')
install.packages('corrgram')
install.packages('corrgram')
install.packages("corrplot")
library(corrgram)
library(corrplot)
corrplot(coor.data)
print(corrplot(coor.data,method = 'color'))
install.pakages('caTools')
install.pakages('caTools')
install.packages('caTools')
print(summary(model))
library('caTools')
set.seed(101)
df <- read.csv('student-mat.csv',sep=';')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
df <- read.csv('student-mat.csv',sep=';')
head(df)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
res <- residuals(model)
res <-as.data.frame(model)
class(res)
res <-as.data.frame(res)
head(res)
library(ggplot2)
source('~/.active-rstudio-document')
ggplot(res,aes(res)) + geom_histogram(fill='blue',alpha=0.5)
plot(model)
plot(model)
G3.predictions
plot(model)model
model
head(model)
library(caTools)
library(corrplot)
library(ggplot2)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
G3.pridictions <- predict(model,test)
G3.pridictions <- predict(model,test)
result <- cbind(G3.pridictions,test$G3)
colnames(result)<- c("pridicted","actual")
print(head(result))
data <- read.csv(file = 'diabetes.csv',head='TRUE',sep = ',')
data <- read.csv(file = 'diabetes.csv',header ='TRUE',sep = ',')
data <- read.csv(file = "diabetes.csv",head =TRUE,sep = ',')
head(data)
library(caTools)
split <- sample.split(data,SplitRatio = 0.8)
source('~/.active-rstudio-document')
model <- glm(Outcome~.,training,family="binomial")
summary(model)
model <- glm(Outcome~-Glucose,training,family="binomial")
summary(model)
model <- glm(Outcome~-SkinThikness,training,family="binomial")
model <- glm(Outcome~-SkinThickness,training,family="binomial")
summary(model)
model <- glm(Outcome~-SkinThickness,-Age,training,family="binomial")
model <- glm(Outcome~-Age,training,family="binomial")
summary(model)
model <- glm(Outcome~-SkinThickness,-Age,training,family="binomial")
model <- glm(Outcome~-Insulin,training,family="binomial")
summary(model)
model <- glm(Outcome~.-Insulin,training,family="binomial")
summary(model)
model <- glm(Outcome~.-Insulin-SkinThickness,training,family="binomial")
summary(model)
model <- glm(Outcome~.-Insulin,training,family="binomial")
summary(model)
model <- glm(Outcome~.-Insulin-SkinThickness,training,family="binomial")
summary(model)
res <- predict(model,testing,type = "responsde")
res <- predict(model,testing,type = "response")
res
testing
table(ActualValue=testing$Outcome,PredictedValue=res>0.5)
(439+155)/(439+61+113+155)
table(ActualValue=testing$Outcome,PredictedValue=res>0.3)
(357+213)/(357+143+55+213)
table(ActualValue=testing$Outcome,PredictedValue=res>0.2)
(241+277)/(277+223+27+241)
table(ActualValue=testing$Outcome,PredictedValue=res>0.5)
(439+155)/(439+61+113+155)
res <- predict(model,testing,type = "response")
res <- predict(model,training,type = "response")
library(ROCR)
library(ROCR)
library(ROCR)
install.packages(ROCR)
help(ROCR)
install.packages(ROCR)
install.packages("C:/Users/ayush/Downloads/ROCR_1.0-5.zip", repos = NULL, type = "win.binary")
library(ROCR)
ROCRPred = prediction(res,training$Outcome)
ROCRPref <- performance(ROCRPred,"tpr","fpr")
plot(ROCRPref,colorize=TRUE,print.cutoffs.at=seq(0.1,by=0.1))
model <- glm(Outcome~.,testing,family="binomial")
table(ActualValue=training$Outcome,PredictedValue=res>0.3)
table(ActualValue=training$Outcome,PredictedValue=res>0.5)
table(ActualValue=training$Outcome,PredictedValue=res>0.4)
(410+182)/(410+182+86+90)
(439+155)/(113++155+439+61)
(357+213)/(55+143)
(357+213)/(357+213+55+143)
load("~/.RData")
source('G:/data sciences/diabetes.R')
source('G:/data sciences/linear_reg.R')
install.packages("ISLR")
library(ISLR)
str(Caravan)
summary(Caravan$Purchase)
any(is.na(Caravan))
library(rpart)
str(kyphosis)
head(kyphosis)
setwd("G:/data sciences/projects/linear_reg")
df <- read.csv('weatherHistory.csv')
df <- read.csv('weatherHistory.csv')
head(df)
summary(df)
str(df)
df2 <- sapply(df,-Formatted.Date)
df2 <- sapply(df,-df$Formatted.Date)
df2 = subset(df, select = -c(Formatted.Date))
head(df2)
is.na(df2)
###dealing with missing data
any(is.na(df2))
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
num.cols <- sapply(df2, is.numeric)
cor.data <- cor(num.cols)
cor.data <- cor(df2[,num.cols])
round(cor.data,2)
head(cor.data)
round(head(cor.data),2)
library(corrgram)
library(corrplot)
print(corrplot(cor.data,method = color))
print(corrplot(cor.data,method = 'color'))
cor.data <- cor(df2[,num.cols],use='complete.obs')
round(head(cor.data),2)
df2 <- omit.na(df2)
library('Amelia')
df2 <- omit.na(df2)
df2 <- na.omit(df2)
num.cols <- sapply(df2, is.numeric)
cor.data <- cor(df2[,num.cols])
print(corrplot(cor.data,method = 'color'))
df2 <- subset(df2,-c(Loud.Cover))
df2 <- subset(df,-c(Loud.Cover))
print(df2$Loud.Cover)
df2 <- subset(df,-c(Loud.Cover))
df2 <- subset(df,-c(pressure))
df2 <- subset(df,-c(Presure..millibars.))
df2 <- subset(df,-c(Pressure..millibars.))
df2 <- subset(df,select=select = -c(Pressure..millibars.,Loud.Cover))
df2 <- subset(df,select = -c(Pressure..millibars.,Loud.Cover))
cor.data <- cor(df2[,num.cols])
num.cols <- sapply(df2, is.numeric)
cor.data <- cor(df2[,num.cols])
print(corrplot(cor.data,method = 'color'))
head(df2)
head(cor.data)
df2
df3 <- subset(df2,select = -c(Daily.Summary,Formatted.Date,Summary,Precip.Type,))
df3 <- subset(df2,select = -c(Daily.Summary,Formatted.Date,Summary,Precip.Type))
df3
any(is.na(df3))
library(caTools)
set.seed(105)
sample.data <- sample.split(df3,SplitRatio = 0.7)
train <- subset (df3,sample =TRUE)
test <- subset(df3, sample = FALSE)
my.model <- lm(Apparent.Temperature..C. ~.,train)
print(summary(my.model))
final.prediction <- predict(my.model,test)
result <- cbind(final.prediction,test$Apparent.Temperature..C.)
colnames(result) <- c("prediction","actual")
print(head(result))
